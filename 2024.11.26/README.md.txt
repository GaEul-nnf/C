README.md

# 2024.11.26

## 18_I2C_Driver

I2C를 통해 마스터-슬레이브 간 데이터 송수신을 구현

I2C 설정 및 초기화

HAL_I2C_Master_Transmit() 함수가 호출되면 마스터는 슬레이브에 데이터 전송

HAL_I2C_Master_Receive() 함수로 슬레이브 장치로부터 데이터 요청

전송 또는 수신이 완료되면 HAL 함수는 STOP 조건을 생성하여 I2C 버스 해제


## 19_DMA_MemorytoMemory

DMA를 사용해 메모리 간 데이터를 전송하며, CPU 부하를 줄이고 효율적인 데이터 처리

DMA 설정 및 초기화

HAL 함수 HAL_DMA_Start() 호출시 DMA 컨트롤러 데이터 전송

DMA 전송이 완료될 때까지 HAL 함수 HAL_DMA_PollForTransfer()로 상태를 확인


## 내용정리 

#### I2C Protocol

I2C : 두 개의 와이어만 사용하여 여러 디바이스 간 통신을 가능하게 하는 직렬 통신 프로토콜

#### I2C 주요 특징

양방향 통신 : SDA와 SCL 두 선을 사용하여 데이터 송수신

마스터-슬레이브 구조 : 마스터가 클록 신호를 생성하고, 통신을 제어, 슬레이브는 마스터의 명령을 따라 데이터 송수신

멀티 마스터 지원 : 여러 마스터 디바이스를 허용하지만, 충돌 방지를 위해 적절한 프로토콜 필요

슬레이브 주소 지정 : 각 슬레이브는 고유 주소를 가져야 함, 마스터가 해당 주소를 호출하여 특정 슬레이브와 통신

#### I2C 데이터 전송 과정

스타트 조건 : SDA가 낮은 상태로 전환되고, SCL이 높은 상태일 때 시작

슬레이브 주소 전송 : 
마스터는 슬레이브 주소를 전송하고, 읽기/쓰기(R/W) 비트 추가

슬레이브 응답(Ack) : 슬레이브가 자신의 주소와 일치하는 경우, 응답 신호(Acknowledge)를 보냄

데이터 송수신 : 데이터는 8비트 단위로 전송되며, 매 바이트마다 응답(Ack)을 확인

정지 조건 : SDA가 높은 상태로 전환되고, SCL이 높은 상태로 유지되면 종료

#### I2C 장단점

장점 : 선 개수가 적어 하드웨어 간소화, 비용 효율적이고 저전력 소비

단점 : 데이터 전송 속도가 SPI에 비해 느림, 네트워크가 복잡해질 경우 신호 간섭 가능성


#### Real Time Clocks

RTC(Real Time Clock) : 정확한 날짜와 시간을 유지하는 데 사용되는 하드웨어 모듈

#### RTC 주요 특징

지속적인 시간 유지 : 메인 전원이 꺼져도 백업 배터리를 통해 동작, 현재 시각, 날짜, 요일, 월, 연도를 계속 유지

저전력 설계 : 일반적으로 낮은 클록 주파수를 사용하여 에너지 소비를 최소화

정확한 타이밍 제공 : 초 단위에서 연도 단위까지 정확한 시간 계산

알람 및 타임스탬프 : 특정 시간에 이벤트를 발생시키는 알람 기능 제공, 시스템 이벤트에 대한 타임스탬프 기록 가능

#### RTC 동작 원리

클록 소스 : 32.768kHz의 외부 크리스탈 오실레이터를 주로 사용, 이 클록을 사용하여 초, 분, 시간을 계산

레지스터 구조 : 시간 및 날짜 설정을 위한 다양한 레지스터 제공, 소프트웨어를 통해 값을 읽고 쓰며 설정 가능

백업 배터리 : 메인 전원이 꺼진 상태에서도 RTC 데이터를 유지하도록 보조 전원 공급

#### RCT 장단점

장점 : 전원이 끊겨도 시간 유지 가능, 저전력 설계로 배터리 기반 애플리케이션에 적합

단점 : 외부 크리스탈 오실레이터의 정확성에 따라 성능 차이 발생, 초기 설정이 필요하며, 추가적인 회로 설계 요구